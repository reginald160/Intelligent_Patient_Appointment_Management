@using HMS.Infrastructure.Persistence.DataContext
@using HMSPortal.Application.Core
@using HMSPortal.Application.Core.Cache
@using HMSPortal.Application.Core.Extensions
@using HMSPortal.Application.ViewModels
@using HMSPortal.Domain.Enums
@using HMSPortal.Domain.Models
@using Microsoft.AspNetCore.Identity
@using Microsoft.Extensions.Caching.Memory
@using Newtonsoft.Json
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject   IHttpContextAccessor _httpContextAccessor;
@inject RoleManager<IdentityRole> _roleManager;
@inject  IMemoryCache _memoryCache;

@{
	var cacheKey = CoreValiables.LoginUser;
	var userCache = new CacheUserModel();
	var superAdminName = Roles.SuperAdmin.ToString();
	var adminName = Roles.Admin.ToString();
	var doctorName = Roles.Doctor.ToString();
	var PatientName = Roles.Patient.ToString();
	string idValue = "";

	var userCacheString = _httpContextAccessor.HttpContext.Session.GetString(cacheKey);
	IList <string> roles = new List<string>();

	if (string.IsNullOrEmpty(userCacheString))
	{
		var user = _httpContextAccessor.HttpContext.User;
		if (user.Identity.IsAuthenticated)
		{
			var currentUser = await UserManager.GetUserAsync(user);
			if (currentUser != null)
			{
				roles =  await UserManager.GetRolesAsync(currentUser);
				userCache = new CacheUserModel
						{
							Id = currentUser.Id,
							Email = currentUser.Email,
							Role = roles.FirstOrDefault()

						};

			}

		}
		else
		{
			// var currentUser = UserManager.Users.FirstOrDefault(x => x.Email == "ozougwuifeanyi160@gmail.com");
			// roles =  await UserManager.GetRolesAsync(currentUser);
			userCache = JsonConvert.DeserializeObject<CacheUserModel>(userCacheString);
		}

		// Serialize userCache to a JSON string
		var userCacheString1 = JsonConvert.SerializeObject(userCache);
		// Store userCacheString in session
		_httpContextAccessor.HttpContext.Session.SetString(cacheKey, userCacheString1);



	}
	else
	{
		userCache = JsonConvert.DeserializeObject<CacheUserModel>(userCacheString);
	}

	idValue = userCache.Id;
	var leftBarPartialView = "";


}


<!DOCTYPE html>
<html lang="en">

<head>
	<base href="/" />
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<title>ProClinic-Bootstrap4 Hospital Admin</title>
	<!-- Fav  Icon Link -->
	<link rel="shortcut icon" type="image/png" href="mediplus-lite/img/logo.png">
	<!-- Bootstrap core CSS -->
	<link rel="stylesheet" href="css/bootstrap.min.css">
	<!-- themify icons CSS -->
	<link rel="stylesheet" href="css/themify-icons.css">
	<!-- Animations CSS -->
	<link rel="stylesheet" href="css/animate.css">
	<!-- Main CSS -->
	<link rel="stylesheet" href="css/styles.css">
	<link rel="stylesheet" href="css/red.css" id="style_theme">
	<link rel="stylesheet" href="css/responsive.css">
	<!-- morris charts -->
	<link rel="stylesheet" href="charts/css/morris.css">
	<!-- jvectormap -->
	<link rel="stylesheet" href="css/jquery-jvectormap.css">

	<script src="js/modernizr.min.js"></script>
	<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />

</head>

<body>

	<div class="theme-settings" id="switcher">
		<span class="theme-click">
			<span class="ti-settings"></span>
		</span>
		<span class="theme-color theme-default" data-color="green"></span>
		<span class="theme-color theme-blue" data-color="blue"></span>
		<span class="theme-color theme-red theme-active" data-color="red"></span>
		<span class="theme-color theme-violet" data-color="blue"></span>
		<span class="theme-color theme-yellow" data-color="yellow"></span>
	</div>

	<div class="wrapper">
		<!-- Sidebar -->
		<nav id="sidebar" class="proclinic-bg">
			<div class="sidebar-header">
				<a asp-controller="Dashboard" asp-action="Index"><img src="mediplus-lite/img/logo.png" class="logo" alt="logo"></a>
			</div>
			@{
				var role = userCache.Role;

				switch (role)
				{
					case var _ when role == PatientName:
						@await Html.PartialAsync("_patientLeftBarPartial ")
						;
						break;

					case var _ when role == superAdminName:
						@await Html.PartialAsync("_superAdmiLeftBarPartial")
						;
						break;
					case var _ when role == doctorName:
						@await Html.PartialAsync("_doctorAdmiLeftBarPartial")
						;
						break;

					// Add more cases if there are other roles
					default:
						// Optional: handle the default case if no roles match
						@await Html.PartialAsync("_admiLeftBarPartial")
						break;
				}
			}


			<div class="nav-help animated fadeIn">
				<h5><span class="ti-comments"></span> Need Help</h5>
				<h6>
					<span class="ti-mobile"></span> +1 1234 567 890
				</h6>
				<h6>
					<span class="ti-email"></span> suppoer@medismart.com
				</h6>
				<p class="copyright-text">Copy rights &copy; 2024</p>
			</div>
		</nav>
		<!-- /Sidebar -->
		<!-- Page Content -->
		<div id="content">
			<!-- Top Navigation -->
			<nav class="navbar navbar-default">
				<div class="container-fluid">
					<div class="responsive-logo">
						<a href="index.html"><img src="images/logo-dark.png" class="logo" alt="logo"></a>
					</div>
					<ul class="nav">
						<li class="nav-item">
							<span class="ti-menu" id="sidebarCollapse"></span>
						</li>
						<li class="nav-item">
							<span title="Fullscreen" class="ti-fullscreen fullscreen"></span>
						</li>
						<li class="nav-item">
							<a data-toggle="modal" data-target=".proclinic-modal-lg">
								<span class="ti-search"></span>
							</a>
							<div class="modal fade proclinic-modal-lg" tabindex="-1" role="dialog" aria-hidden="true">
								<div class="modal-dialog modal-lorvens">
									<div class="modal-content proclinic-box-shadow2">
										<div class="modal-header">
											<h5 class="modal-title">Search Patient/Doctor:</h5>
											<span class="ti-close" data-dismiss="modal" aria-label="Close">
											</span>
										</div>
										<div class="modal-body">
											<form>
												<input id="userid" hidden="hidden" value="@idValue" />
												<div class="form-group">
													<input type="text" class="form-control" id="search-term" placeholder="Type text here">
													<button type="button" class="btn btn-lorvens proclinic-bg">
														<span class="ti-location-arrow"></span> Search
													</button>
												</div>
											</form>
										</div>
									</div>
								</div>
							</div>
						</li>
						<li class="nav-item">
							<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
								<span class="ti-announcement"></span>
							</a>
							<div class="dropdown-menu proclinic-box-shadow2 notifications animated flipInY">
								<h5>Notifications</h5>
								<a class="dropdown-item" href="#">
									<span class="ti-wheelchair"></span> New Patient Added
								</a>
								<a class="dropdown-item" href="#">
									<span class="ti-money"></span> Patient payment done
								</a>
								<a class="dropdown-item" href="#">
									<span class="ti-time"></span>Patient Appointment booked
								</a>
								<a class="dropdown-item" href="#">
									<span class="ti-wheelchair"></span> New Patient Added
								</a>
							</div>
						</li>
						<li class="nav-item">
							<a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
								<span class="ti-user"></span>
							</a>
							<div class="dropdown-menu proclinic-box-shadow2 profile animated flipInY">
								@if (User != null && User.Identity.IsAuthenticated)
								{
									<h5> @User.Identity.Name!</h5>
								}

								<a class="dropdown-item" href="#">
									<span class="ti-settings"></span> Settings
								</a>
								<a class="dropdown-item" href="#">
									<span class="ti-help-alt"></span> Help
								</a>
								<a class="dropdown-item" asp-action="LogOut" asp-controller="Auth">
									<span class="ti-power-off"></span> Logout
								</a>
							</div>
						</li>
					</ul>

				</div>
			</nav>
			<div class="row no-margin-padding">
				<div class="col-md-6">
					<h3 class="block-title">@ViewData["Title"]</h3>
				</div>
				<div class="col-md-6">
					<ol class="breadcrumb">
						<li class="breadcrumb-item">
							<a asp-action="Index" asp-controller="Dashboard">
								<span class="ti-home"></span>
							</a>
						</li>
						<li class="breadcrumb-item">@Html.GetControllerDisplayName()</li>
						<li class="breadcrumb-item active">@ViewData["Title"]</li>
					</ol>
				</div>
			</div>
		

			@RenderBody()

		</div>
		<!-- /Page Content -->
	</div>
	<!-- Back to Top -->
	<!-- /Back to Top -->
	<!-- Jquery Library-->
	<script src="js/jquery-3.2.1.min.js"></script>
	<!-- Popper Library-->
	<script src="js/popper.min.js"></script>
	<!-- Bootstrap Library-->
	<script src="js/bootstrap.min.js"></script>
	<!-- morris charts -->
	<script src="charts/js/raphael-min.js"></script>
	<script src="charts/js/morris.min.js"></script>
	<script src="js/custom-morris.js"></script>
	<script src="js/modernizr.min.js"></script>

	<script>
		function reloadPage() {
			location.reload();
		}
	</script>

	<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
	<script src="js/custom.js"></script>
	<script src="//cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js" asp-append-version="true"></script>
	<script src="https://cdn.tiny.cloud/1/d1fpkxihlzdu61yllazo0c9ehlxeuk04a3awulg82m1vo2b4/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.18/signalr.min.js"></script>
@* 	<script>
		var connection = new signalR.HubConnectionBuilder().withUrl("/userHub").build();

		connection.on("ForceLogout", function (userId) {
			// Redirect to access denied page
			var userid = document.getElementById('userid').value;

			console.log(userId);

			if (userId == userid)
			{
				
				window.location.href = '/Auth/LogOut';
			}
				
		});

		connection.start().catch(function (err) {
			return console.error(err.toString());
		});
	</script> *@
</body>
</html>
@RenderSection("Scripts", required: false)